version: 2.1
executors:
  dg_38:
    environment:
      CODECOV_TOKEN: "82512efc-b166-4477-b755-7763d56f261c"
      COLUMNS: 160
      # default is /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      PATH: /root/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: alezana/dg_base:3.8

workflows:
  version: 2
  install_test_docs:
    jobs:
      - install
      - make-docs:
          requires:
            - install
      - test-38:
          requires:
            - install

jobs:
  install:
    executor: dg_38
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Pull lfs files
          command: |
            git lfs pull
      - run:
          name: Pull submodules (commonroadscenarios)
          command: |
            git submodule update --init
      - run:
          name: Install deps
          command: |
            echo PATH=$PATH
            pip install -q --user --upgrade -r requirements.txt
      - run:
          name: List deps
          command: |
            mkdir -p artifacts
            pip list | tee artifacts/pip-list.txt
            pipdeptree | tee artifacts/pipdeptree.txt
      - store_artifacts:
          path: artifacts/
      - run:
          name: setup.py develop
          command: |
            python setup.py develop --prefix ~/.local --no-deps
      - persist_to_workspace:
          root: .
          paths:
            - .*

  make-docs:
    executor: dg_38
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Make docs
          command: |
            ls -a
            make docs
      - store_artifacts:
          path: out/docs
          destination: docs

  test-38: &test-template
    executor: dg_38
    working_directory: ~/repo
    resource_class: large
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Notebooks
          command: |
            make -C notebooks cleanup all

      - run:
          name: Run tests
          command: |
            make test

      - store_test_results:
          path: out/test-results

      - store_artifacts:
          path: out/tests
          destination: tests
      - run:
          name: Coverage report
          when: always
          command: |
            make coverage-combine
            make coverage-report
            coverage xml

      - store_artifacts:
          path: out/coverage
          destination: coverage

      - run:
          name: CodeCov
          when: always
          command: |
            codecov
