version: 2.1
executors:
  dg_38:
    environment:
      CODECOV_TOKEN: "82512efc-b166-4477-b755-7763d56f261c"
      COLUMNS: 160
      # default is /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      PATH: /root/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: alezana/dg_base:3.8

workflows:
  version: 2
  test:
    jobs:
      - test-38

jobs:
  test-38: &test-template
    resource_class: large
    executor: dg_38
    working_directory: ~/repo
    steps: &steps
      - checkout
      - run:
          name: Pull lfs files
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
            apt-get install git-lfs
            git lfs install & git lfs pull
      - run:
          name: Pull submodules (commonroadscenarios)
          command: |
            git submodule update --init
      - run:
          name: Install deps
          command: |
            echo PATH=$PATH
            pip install -q --user --upgrade -r requirements.txt

      - run:
          name: List deps
          command: |
            mkdir -p artifacts
            pip list | tee artifacts/pip-list.txt
            pipdeptree | tee artifacts/pipdeptree.txt
      - run:
          name: setup.py develop
          command: |
            python setup.py develop --prefix ~/.local --no-deps

      - run:
          name: Make docs
          command: |
            make docs

      - store_artifacts:
          path: out/docs
          destination: docs

      - run:
          name: Notebooks
          command: |
            make -C notebooks cleanup all

      - run:
          name: Run tests
          command: |
            make test

      - store_test_results:
          path: out/test-results

      - store_artifacts:
          path: out/tests
          destination: tests

      - run:
          name: Coverage report
          when: always
          command: |
            make coverage-combine
            make coverage-report
            coverage xml

      - store_artifacts:
          path: out/coverage
          destination: coverage

      - run:
          name: CodeCov
          when: always
          command: |
            codecov
