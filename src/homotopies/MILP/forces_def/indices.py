from enum import IntEnum, unique


@unique
class IdxInputB(IntEnum):
    """binary variables and auxiliary variables"""
    Sigma1_n = 0
    """binary variable indicating whether vehicle is to the left of the obstacle"""
    Sigma1_p = 1
    """binary variable indicating whether vehicle is to the right of the obstacle"""
    Sigma2_n = 2
    """binary variable indicating whether vehicle is below the obstacle"""
    Sigma2_p = 3
    """binary variable indicating whether vehicle is to the left of the obstacle"""


@unique
class IdxSlack(IntEnum):
    Slack1_n = 4
    """slack variable for sigma_L"""
    Slack1_p = 5
    """slack variable for sigma_R"""
    Slack2_n = 6
    """slack variable for sigma_B"""
    Slack2_p = 7
    """slack variable for sigma_A"""


@unique
class IdxInputC(IntEnum):
    """continuous variable"""
    ddS = 0
    """lateral acc"""


@unique
class IdxState(IntEnum):
    S = 1
    dS = 2


@unique
class IdxParams(IntEnum):
    Homotopy = 0
    """homotopy class"""
    Box = 1
    """bos position and size generated by intersection"""
    TargetSpeed = 2
    """"target longitudinal speed in [m/s]"""
