from enum import IntEnum, unique


@unique
class IdxInputB(IntEnum):
    """binary variables"""
    Sigma1_n = 0
    """binary variable indicating whether vehicle1 has reached the intersection"""
    Sigma1_p = 1
    """binary variable indicating whether vehicle1 has passes the intersection"""
    Sigma2_n = 2
    """binary variable indicating whether vehicle2  has reached the intersection"""
    Sigma2_p = 3
    """binary variable indicating whether vehicle2 has passed the intersection"""


@unique
class IdxSlack(IntEnum):
    """slack variables for constructing interstage equality constraints of binary variables"""
    Slack1_n = 4
    """slack variable for sigma1_n"""
    Slack1_p = 5
    """slack variable for sigma1_p"""
    Slack2_n = 6
    """slack variable for sigma2_n"""
    Slack2_p = 7
    """slack variable for sigma2_p"""


@unique
class IdxInputC(IntEnum):
    """continuous variable"""
    ddS = 0
    """longitudinal acc"""


@unique
class IdxState(IntEnum):
    """states"""
    S = 1
    """longitudinal position"""
    dS = 2
    """longitudinal velocity"""


@unique
class IdxParams(IntEnum):
    Homotopy = 0
    """homotopy class"""
    Box = 1
    """bos position and size generated by intersection"""
    TargetSpeed = 2
    """"target longitudinal speed in [m/s]"""
